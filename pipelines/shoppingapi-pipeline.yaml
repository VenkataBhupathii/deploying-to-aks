trigger:
  branches:
    include:
      - main
  paths:
    include:
      - Shopping/Shopping.API/*
      - aks/shoppingapi.yaml

resources:
  - repo: self

variables:
  dockerRegistryServiceConnection: '81f3f3e3-5750-4786-90de-d7718c9fb4d7'
  imageRepository: 'venkatabhupathi/shopping-api'
  dockerfilePath: 'Shopping/Shopping.API/Dockerfile'
  tag: 'latest-$(Build.BuildId)'
  imagePullSecret: 'dockerhub-secret'
  vmImageName: 'ubuntu-latest'  # Using Microsoft-hosted Ubuntu agent

stages:
- stage: Build
  displayName: Build stage
  jobs:
    - job: Build
      displayName: Build and Push Image
      pool:
        vmImage: $(vmImageName)  # Automatically uses the Microsoft-hosted agent
      steps:
        - task: Docker@2
          displayName: Build and push an image to Docker Hub
          inputs:
            command: buildAndPush
            repository: $(imageRepository)
            dockerfile: $(dockerfilePath)
            containerRegistry: $(dockerRegistryServiceConnection)
            buildContext: $(Build.SourcesDirectory)/Shopping
            tags: |
              $(tag)
        - upload: aks
          artifact: aks

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
    - deployment: Deploy
      displayName: Deploy to Kubernetes
      pool:
        vmImage: $(vmImageName)  # Uses the Microsoft-hosted agent for deploy stage
      environment: 'aspnetrunrundevops.default'
      strategy:
        runOnce:
          deploy:
            steps:
            - task: KubernetesManifest@0
              displayName: Create imagePullSecret
              inputs:
                action: createSecret
                secretName: $(imagePullSecret)
                dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
            - task: KubernetesManifest@0
              displayName: Deploy Shopping API to Kubernetes cluster
              inputs:
                action: deploy
                manifests: |
                  $(Pipeline.Workspace)/aks/shoppingapi.yaml
                imagePullSecrets: |
                  $(imagePullSecret)
                containers: |
                  $(imageRepository):$(tag)
